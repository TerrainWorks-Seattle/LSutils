% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_dems.R
\name{predict_and_save}
\alias{predict_and_save}
\title{Predict and save}
\usage{
predict_and_save(
  model,
  files_in,
  file_out,
  ...,
  mask_range = NULL,
  scale_vals = NULL,
  ln_pca = TRUE,
  transform = function(x) x,
  file_type = "tif",
  write_covars = TRUE,
  quiet = FALSE
)
}
\arguments{
\item{model}{A trained model. Must have function $predict_newdata and $state$train_task$feature_names. These are both provided by most mlr3 learners.}

\item{file_out}{The name of the csv file to write results.}

\item{scale_vals}{The centering and scaling values used in training the model. The same values should be used when predicting data. The function expects a tibble with one column per feature and two values per feature. For example, \code{tibble(gradient = c(center_value, scale_value), mean_curv = c(center_value, scale_value))}.}

\item{transform}{A function that calculates any transformed columns needed for the model. For example, this package includes a function called "make_quadratic_features" which calculateds squared and interaction terms for all numeric features.}

\item{dir_in}{A directory which contains the necessary elevation derivative files for prediction.}
}
\value{
A logical value.
}
\description{
This function takes a folder with elevation derivative files for a basin and a model and saves the predictions to a .csv file.
The csv has columns "x" and "y" with coordinates, "prob.pos" with the model output, and all features used in the calculation of the model.
}
\details{
An implementation note: Since we are using a classification model to derive the probability of classification into the positive class, we must change the rasters into a data frame, and use the $predict_newdata function. If we were interested in classification, we would be able use the mlr3spatiotemp::predict_spatial() function with raster inputs and raster outputs.
}
